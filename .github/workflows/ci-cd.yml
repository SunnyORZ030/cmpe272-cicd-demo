name: CI/CD - Flask Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/cmpe272-flask

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          echo "PWD: $PWD"
          ls -la
          python -m pytest -q

  build-and-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set tags
        id: vars
        run: |
          echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "run=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ steps.vars.outputs.sha }}
            ${{ env.IMAGE }}:${{ steps.vars.outputs.run }}

  smoke-test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Run container from pushed image
        run: |
          docker run -d -p 8000:8000 --name app ${{ env.IMAGE }}:latest
          for i in {1..40}; do
            code=$(curl -s -o /dev/null -w '%{http_code}' http://127.0.0.1:8000/ || true)
            if [ "$code" = "200" ]; then echo "OK"; exit 0; fi
            sleep 0.5
          done
          echo "health check failed"; docker logs app --tail=100; exit 1
      - name: Show logs (on failure)
        if: failure()
        run: docker logs app || true
      - name: Teardown
        if: always()
        run: docker rm -f app || true
